-- Initial Analysis 
select * from transactions_sustainable_clothing;
select * from sustainable_clothing;
select * from marketing_campaigns;


-- 1. How many transactions were completed during each marketing campaign?
select c.campaign_id,count(t.product_id) as transactions_count from 
marketing_campaigns as c
join transactions_sustainable_clothing as t
on c.product_id = t.product_id
group by c.campaign_id;

-- 2. Which product had the highest sales quantity?
select p.product_name, sum(t.quantity) as total_quantity from sustainable_clothing as p
join transactions_sustainable_clothing as t
on p.product_id = t.product_id
group by p.product_name
order by total_quantity desc;

-- 3. What is the total revenue generated from each marketing campaign?
with cte1 as (
select c.campaign_id, c.campaign_name,(t.quantity * p.price) as sales_amount 
from marketing_campaigns as c
join transactions_sustainable_clothing as t
on c.product_id = t.product_id
join sustainable_clothing as p
on p.product_id = t.product_id)
select campaign_name , sum(sales_amount) as revenue_generated from cte1
group by campaign_name
order by revenue_generated desc;


-- 4. What is the top-selling product category based on the total revenue generated?
with cte1 as (
select p.category , (p.price * t.quantity) as sales_amount from sustainable_clothing as p
join transactions_sustainable_clothing as t
on p.product_id = t.product_id
)
select category , sum(sales_amount) as revenue_generated from cte1
group by category
order by revenue_generated desc;

-- 5. Which products had a higher quantity sold compared to the average quantity sold?
with cte1 as (
select p.product_name,sum(t.quantity) as quantity_sold
from transactions_sustainable_clothing as t
join sustainable_clothing as p
on p.product_id = t.product_id
group by product_name)
select product_name,quantity_sold from cte1
where quantity_sold > (select avg(quantity) from transactions_sustainable_clothing)
order by quantity_sold desc;

-- 6. What is the average revenue generated per day during the marketing campaigns?

select c.campaign_name , round(sum(t.quantity*p.price)/30,2) as sales_amount
from transactions_sustainable_clothing as t
join marketing_campaigns as c
on t.product_id = c.product_id
join sustainable_clothing as p 
on t.product_id = p.product_id
where t.purchase_date between start_date and end_date
group by c.campaign_name;

-- 7. What is the percentage contribution of each product to the total revenue?
with cte1 as (
select p.product_name , sum(t.quantity*p.price) as revenue_generated
from sustainable_clothing as p
join transactions_sustainable_clothing as t
on p.product_id = t.product_id
group by p.product_name)
select product_name , 
round((revenue_generated/sum(revenue_generated) over(order by (select null)))*100,2) as '%_of_revenue_generated' from cte1;

-- 8. Compare the average quantity sold during marketing campaigns to outside the marketing campaigns

with cte1 as (
select p.product_name,avg(t.quantity) as avg_qty_sold_during_campaign
from marketing_campaigns as c
join transactions_sustainable_clothing as t 
on c.product_id = t.product_id
join sustainable_clothing as p 
on p.product_id = t.product_id
where t.purchase_date BETWEEN c.start_date AND c.end_date 
group by p.product_name), cte2 as (
select p.product_name,avg(t.quantity) as avg_qty_sold_not_in_campaign
from marketing_campaigns as c
join transactions_sustainable_clothing as t 
on c.product_id = t.product_id
join sustainable_clothing as p 
on p.product_id = t.product_id
where t.purchase_date not BETWEEN c.start_date AND c.end_date 
group by p.product_name)
SELECT
   t1.product_name,
   avg_qty_sold_during_campaign,
   avg_qty_sold_not_in_campaign 
FROM
   cte1 as t1
   JOIN
      cte2 as t2 on t1.product_name = t2.product_name;

-- 9. Compare the revenue generated by products inside the marketing campaigns to outside the campaigns

with cte1 as (
select p.product_name,sum(t.quantity*p.price) as revenue_during_campaign
from marketing_campaigns as c
join transactions_sustainable_clothing as t 
on c.product_id = t.product_id
join sustainable_clothing as p 
on p.product_id = t.product_id
where t.purchase_date BETWEEN c.start_date AND c.end_date 
group by p.product_name), cte2 as (
select p.product_name,sum(t.quantity*p.price) as revenue_not_campaign
from marketing_campaigns as c
join transactions_sustainable_clothing as t 
on c.product_id = t.product_id
join sustainable_clothing as p 
on p.product_id = t.product_id
where t.purchase_date not BETWEEN c.start_date AND c.end_date 
group by p.product_name)
SELECT
   t1.product_name,
   revenue_during_campaign,
   revenue_not_campaign 
FROM
   cte1 as t1
   JOIN
      cte2 as t2 on t1.product_name = t2.product_name;

-- 10. Rank the products by their average daily quantity sold
SELECT
   p.product_name,
   round(AVG(t.quantity), 2) AS avg_quantity,
   DENSE_RANK() OVER(
ORDER BY
   AVG(t.quantity) DESC) AS product_rank 
FROM
   transactions_sustainable_clothing as t 
   JOIN
      sustainable_clothing as p on t.product_id = p.product_id
GROUP BY
   product_name 
ORDER BY
   avg_quantity DESC ;